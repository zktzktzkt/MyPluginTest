
buildscript {

    repositories {
        //引用本地创建的插件
        maven { url uri('/repo') }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        mavenLocal()
//        maven { url "https://maven.google.com" }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.10"
//        classpath "org.jetbrains.kotlin:kotlin-android-extensions:1.1.3"
//        classpath 'me.zkt.asm:lib-asm:1.0.0'
    }
}

allprojects {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        mavenLocal()
//        maven { url "https://maven.google.com" }
        mavenCentral()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

/**
 * 删除指定目录下的文件
 */
task deleteJavaSource(type: Delete) {
    doFirst {
        println("path===>${project.rootDir}")
        println("===delete Plugin Source start===")
    }
    followSymlinks = true
    delete "${project.rootDir}/lib-asm/src/main/java"
    doLast {
        println("===delete Plugin Source end===")
    }
}

/**
 * 同步buildSrc中的代码
 */
task copyPluginJavaSource(type: Copy, dependsOn: deleteJavaSource) {
    doFirst {
        println("===copy Plugin Source start===")
    }

    from "${project.rootDir}/buildSrc/src/main/java"
    into "${project.rootDir}/lib-asm/src/main/java"
    include('**/*')

    doLast {
        println("===copy Plugin Source end===")
    }
}

/**
 * 删除指定目录下的文件
 */
task deleteGroovySource(type: Delete) {
    doFirst {
        println("path===>${project.rootDir}")
        println("===delete Plugin Source start===")
    }
    followSymlinks = true
    delete "${project.rootDir}/lib-asm/src/main/groovy"
    doLast {
        println("===delete Plugin Source end===")
    }
}

/**
 * 同步buildSrc中的代码
 */
task copyPluginGroovySource(type: Copy, dependsOn: deleteGroovySource) {
    doFirst {
        println("===copy Plugin Source start===")
    }

    from "${project.rootDir}/buildSrc/src/main/groovy"
    into "${project.rootDir}/lib-asm/src/main/groovy"
    include('**/*')

    doLast {
        println("===copy Plugin Source end===")
    }
}